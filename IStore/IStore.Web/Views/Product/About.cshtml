@using IStore.Domain;
@model Product
@{
    Layout = "_Layout";
}

<div class="single">
    <div class="col-md-9 top-in-single">
        <div class="col-md-5 single-top">
            <div class="flexslider">
                <!-- FlexSlider -->
                <link rel="stylesheet" href="css/flexslider.css" type="text/css" media="screen">

                <script>
                    // Can also be used with $(document).ready()
                    $(window).load(function () {
                        $('.flexslider').flexslider({
                            animation: "slide",
                            controlNav: "thumbnails"
                        });
                    });
                </script>
                <!-- //FlexSlider-->


                <div class="clearfix"></div>
                <div class="flex-viewport" style="overflow: hidden; width: 33%; position: relative;">
                    <div class="thumb-image">
                        <img src="/@Model.Image" class="product-image" draggable="false">
                    </div>
                </div>
            </div>
            <div class="col-md-7 single-top-in">
                <div class="single-para">
                    <h4>@Model.Title</h4>
                    <p>@Model.Description</p>

                    <div class="star-on">
                        <div class="review">
                            <h2>Комментарии:</h2>
                            <div>
                                <p><b>test name</b></p> @{/*TODO: Удалить тестовые строки*/}
                                <p>
                                    DependencyResolutionException: None of the constructors found with 'Autofac.Core.Activators.Reflection.DefaultConstructorFinder' on type 'IStore.Data.Repositories.CommentsRepository' can be invoked with the available services and parameters:
                                    Cannot resolve parameter 'System.String connectionString' of constructor 'Void .ctor(System.String, System.String)'.
                                </p>
                                <hr>
                                <p><b>test name 2</b></p>
                                <p>
                                    путин молодец политик лидер и борец
                                </p>
                                @{
                                    /*
                                     if (((IEnumerable<Comment>)ViewData["comments"]).Count() == 0)
                                     {
                                         <p>Комментариев нет</p>
                                     }
                                     else
                                     {
                                         foreach (Comment comment in ((IEnumerable<Comment>)ViewData["comments"]))
                                         {
                                             <p><b>@comment.User</b></p>
                                             <p>@comment.Text</p>
                                             <hr>
                                         }
                                     }*/
                                }
                            </div>
                        </div>
                        <div class="clearfix"> </div>
                    </div>

                    <label class="add-to">@Model.Price</label>

                    <a class="cart " asp-action="AddToCard" asp-route-id="@Model.Id">В корзину</a>

                    <p>В корзине: @ViewData["productCount"]</p>


                </div>
                </div>
                <div class="clearfix"> </div>
            </div>
            <div class="clearfix"> </div>
        </div>
</div>